@startuml C4_Component_Backend_ViveMedellin
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Diagrama de Componentes - Backend API ViveMedellin

Container(web_app, "Aplicación Web", "React.js", "Frontend principal")
Container(mobile_app, "App Móvil", "React Native", "Frontend móvil")
Container(admin_panel, "Panel Admin", "React.js", "Panel administrativo")

System_Boundary(api, "Backend API - Spring Boot 3.5.6") {
    ' Controllers Layer
    Component(evento_controller, "EventoController", "Spring MVC @RestController", "API REST para gestión completa de eventos")
    Component(usuario_controller, "UsuarioController", "Spring MVC @RestController", "API REST para gestión de usuarios y perfiles")
    Component(valoracion_controller, "ValoracionController", "Spring MVC @RestController", "API REST para valoraciones y comentarios")
    Component(notificacion_controller, "NotificacionController", "Spring MVC @RestController", "API REST para sistema de notificaciones")
    Component(funcion_controller, "FuncionController", "Spring MVC @RestController", "API REST para gestión de funciones de eventos")

    ' Services Layer
    Component(evento_service, "EventoService", "Spring @Service", "Lógica de negocio: crear, actualizar, destacar, cancelar eventos")
    Component(usuario_service, "UsuarioService", "Spring @Service", "Lógica de negocio: registro, autenticación, gestión de perfiles")
    Component(valoracion_service, "ValoracionService", "Spring @Service", "Lógica de negocio: sistema de puntuación y comentarios")
    Component(notificacion_service, "NotificacionService", "Spring @Service", "Lógica de negocio: envío y gestión de notificaciones")
    Component(search_service, "SearchService", "Spring @Service", "Lógica de negocio: búsqueda avanzada y filtros")
    Component(analytics_service, "AnalyticsService", "Spring @Service", "Lógica de negocio: métricas y estadísticas")

    ' Repository Layer
    Component(evento_repository, "EventoRepository", "Spring Data JPA", "Acceso a datos de eventos con queries personalizadas")
    Component(usuario_repository, "UsuarioRepository", "Spring Data JPA", "Acceso a datos de usuarios y autenticación")
    Component(valoracion_repository, "ValoracionRepository", "Spring Data JPA", "Acceso a datos de valoraciones y comentarios")
    Component(notificacion_repository, "NotificacionRepository", "Spring Data JPA", "Acceso a datos de notificaciones")
    Component(funcion_repository, "FuncionRepository", "Spring Data JPA", "Acceso a datos de funciones de eventos")

    ' Configuration & Cross-cutting
    Component(security_config, "SecurityConfiguration", "Spring Security", "Configuración JWT, CORS, autorización por roles")
    Component(swagger_config, "OpenAPIConfiguration", "SpringDoc OpenAPI", "Documentación automática de API con Swagger UI")
    Component(exception_handler, "GlobalExceptionHandler", "Spring @ControllerAdvice", "Manejo centralizado de excepciones y errores")
    Component(validation_aspect, "ValidationAspect", "Spring AOP", "Validaciones transversales y logging")
    Component(cache_config, "CacheConfiguration", "Spring Cache + Redis", "Configuración de cache distribuido")
}

' External Dependencies
ContainerDb(postgresql, "PostgreSQL 18", "Base de Datos", "Almacenamiento persistente principal")
ContainerDb(redis, "Redis Cache", "Cache", "Cache distribuido y sesiones")
Container(elasticsearch, "Elasticsearch", "Motor de Búsqueda", "Índices de búsqueda optimizada")
Container(file_storage, "Almacenamiento", "MinIO/S3", "Archivos estáticos")

System_Ext(email_service, "Servicio Email", "Proveedor externo", "Envío de emails")
System_Ext(payment_api, "API de Pagos", "Pasarela externa", "Procesamiento de pagos")
System_Ext(maps_api, "Google Maps API", "Servicio externo", "Geolocalización")

' Frontend to Controllers
Rel(web_app, evento_controller, "GET/POST/PUT/DELETE /api/eventos/*", "HTTPS/JSON")
Rel(web_app, usuario_controller, "GET/POST/PUT /api/usuarios/*", "HTTPS/JSON")
Rel(web_app, valoracion_controller, "GET/POST/PUT/DELETE /api/valoraciones/*", "HTTPS/JSON")
Rel(mobile_app, evento_controller, "Consume API eventos", "HTTPS/JSON")
Rel(mobile_app, notificacion_controller, "Push notifications", "HTTPS/JSON")
Rel(admin_panel, evento_controller, "Administración eventos", "HTTPS/JSON")
Rel(admin_panel, usuario_controller, "Gestión usuarios", "HTTPS/JSON")

' Controllers to Services
Rel(evento_controller, evento_service, "Delegación lógica de negocio", "Java calls")
Rel(usuario_controller, usuario_service, "Gestión usuarios y autenticación", "Java calls")
Rel(valoracion_controller, valoracion_service, "Procesamiento valoraciones", "Java calls")
Rel(notificacion_controller, notificacion_service, "Envío notificaciones", "Java calls")
Rel(funcion_controller, evento_service, "Gestión funciones de eventos", "Java calls")

' Services to Repositories
Rel(evento_service, evento_repository, "CRUD eventos + queries personalizadas", "JPA/Hibernate")
Rel(evento_service, funcion_repository, "Gestión funciones", "JPA/Hibernate")
Rel(usuario_service, usuario_repository, "CRUD usuarios", "JPA/Hibernate")
Rel(valoracion_service, valoracion_repository, "CRUD valoraciones", "JPA/Hibernate")
Rel(notificacion_service, notificacion_repository, "CRUD notificaciones", "JPA/Hibernate")

' Services Interactions
Rel(evento_service, search_service, "Indexación para búsqueda", "Java calls")
Rel(evento_service, notificacion_service, "Notifica eventos nuevos", "Java calls")
Rel(evento_service, analytics_service, "Registra métricas", "Java calls")
Rel(usuario_service, notificacion_service, "Notifica registro/cambios", "Java calls")

' Repositories to Database
Rel(evento_repository, postgresql, "SQL Queries eventos", "JDBC/PostgreSQL")
Rel(usuario_repository, postgresql, "SQL Queries usuarios", "JDBC/PostgreSQL")
Rel(valoracion_repository, postgresql, "SQL Queries valoraciones", "JDBC/PostgreSQL")
Rel(notificacion_repository, postgresql, "SQL Queries notificaciones", "JDBC/PostgreSQL")
Rel(funcion_repository, postgresql, "SQL Queries funciones", "JDBC/PostgreSQL")

' Cache Integration
Rel(evento_service, cache_config, "Cache eventos populares", "Spring Cache")
Rel(usuario_service, cache_config, "Cache perfiles activos", "Spring Cache")
Rel(cache_config, redis, "Almacena cache", "Redis Protocol")

' External Services
Rel(search_service, elasticsearch, "Indexación y búsqueda", "HTTP/JSON")
Rel(evento_service, file_storage, "Gestión imágenes eventos", "S3/MinIO API")
Rel(notificacion_service, email_service, "Envío emails", "HTTPS/SMTP")
Rel(evento_service, payment_api, "Procesamiento pagos", "HTTPS/API")
Rel(evento_service, maps_api, "Geocodificación direcciones", "HTTPS/API")

' Cross-cutting Concerns
Rel(security_config, usuario_service, "Validación JWT y roles", "Spring Security")
Rel(exception_handler, evento_controller, "Manejo errores eventos", "Spring AOP")
Rel(exception_handler, usuario_controller, "Manejo errores usuarios", "Spring AOP")
Rel(validation_aspect, evento_service, "Validaciones negocio", "Spring AOP")
Rel(validation_aspect, usuario_service, "Validaciones usuarios", "Spring AOP")

@enduml